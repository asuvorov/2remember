# Generated by Django 4.2.13 on 2024-06-02 02:49

import ddcore.models.Accounts
import ddcore.models.Comment
import ddcore.models.Complaint
import ddcore.models.Rating
import ddcore.models.View
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import events.models.Event
import events.models.Participation
import organizations.models.OrganizationGroup
import organizations.models.OrganizationStaff


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ddcore', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, help_text='Team Name', max_length=200, verbose_name='Team')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
            ],
            options={
                'verbose_name': 'team',
                'verbose_name_plural': 'teams',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('avatar', models.ImageField(blank=True, upload_to=ddcore.models.user_directory_path)),
                ('nickname', models.CharField(blank=True, db_index=True, default='', help_text='User Nickname', max_length=32, null=True, verbose_name='Nickname')),
                ('bio', models.TextField(blank=True, default='', help_text='User Bio', null=True, verbose_name='Bio')),
                ('gender', models.CharField(choices=[('0', 'Female'), ('1', 'Male'), ('2', 'Other')], default='0', help_text='User Gender', max_length=2, verbose_name='Gender')),
                ('birth_day', models.DateField(blank=True, db_index=True, help_text='User Birthday', null=True, verbose_name='Birthday')),
                ('receive_newsletters', models.BooleanField(default=False, help_text='I would like to receive Email Updates', verbose_name='I would like to receive Email Updates')),
                ('is_newly_created', models.BooleanField(default=True)),
                ('address', models.ForeignKey(blank=True, help_text='User Address', null=True, on_delete=django.db.models.deletion.CASCADE, to='ddcore.address', verbose_name='Address')),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('phone_number', models.ForeignKey(blank=True, help_text='User Phone Numbers', null=True, on_delete=django.db.models.deletion.CASCADE, to='ddcore.phone', verbose_name='Phone Numbers')),
                ('user', models.OneToOneField(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
                'ordering': ['user__first_name', 'user__last_name'],
            },
            bases=(models.Model, ddcore.models.CommentMixin, ddcore.models.ComplaintMixin, events.models.EventMixin, events.models.ParticipationMixin, organizations.models.OrganizationGroupMixin, organizations.models.OrganizationStaffMixin, ddcore.models.RatingMixin, ddcore.models.ViewMixin),
        ),
        migrations.CreateModel(
            name='UserPrivacyMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('profile_details', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='1', help_text='Who can see my Profile Details (e.g. Avatar, Name, Bio, Gender, Birthday)', max_length=2, verbose_name='Who can see my Profile Details (e.g. Avatar, Name, Bio, Gender, Birthday)')),
                ('contact_details', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='0', help_text='Who can see my Contact Details (e.g. Address, Phone #, Email)', max_length=2, verbose_name='Who can see my Contact Details (e.g. Address, Phone #, Email)')),
                ('events_upcoming', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='2', help_text="Who can see the List of Events, I'm going to participate in (upcoming Events)", max_length=2, verbose_name="Who can see the List of Events, I'm going to participate in (upcoming Events)")),
                ('events_completed', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='2', help_text='Who can see the List of Events, I participated in (completed Events)', max_length=2, verbose_name='Who can see the List of Events, I participated in (completed Events)')),
                ('events_affiliated', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='1', help_text='Who can see the List of Events, I affiliated with ', max_length=2, verbose_name='Who can see the List of Events, I affiliated with ')),
                ('participations_canceled', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='4', help_text='Who can see the List of Participations, canceled by me (withdrawn Participations)', max_length=2, verbose_name='Who can see the List of Participations, canceled by me (withdrawn Participations)')),
                ('participations_rejected', models.CharField(choices=[('0', 'No-one'), ('1', 'Registered Users'), ('2', 'Participants of the Events, I participate in too'), ('4', 'Staff/Group Members of the Organization(s), I affiliated with'), ('8', 'Everyone')], default='4', help_text='Who can see the List of Participations, canceled by the Event Organizer/Admin (rejected Participations)', max_length=2, verbose_name='Who can see the List of Participations, canceled by the Event Organizer/Admin (rejected Participations)')),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('user', models.OneToOneField(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='privacy_members', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'user privacy (members)',
                'verbose_name_plural': 'user privacy (members)',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='UserPrivacyGeneral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('hide_profile_from_search', models.BooleanField(default=False, help_text='Hide my Profile from the Search Results', verbose_name='Hide my Profile from the Search Results')),
                ('hide_profile_from_list', models.BooleanField(default=False, help_text="Hide my Profile from the Members' List", verbose_name="Hide my Profile from the Members' List")),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('user', models.OneToOneField(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='privacy_general', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'user privacy (general)',
                'verbose_name_plural': 'user privacy (general)',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='UserPrivacyAdmins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('profile_details', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='2', help_text='Who can see my Profile Details (e.g. Avatar, Name, Bio, Gender, Birthday)', max_length=2, verbose_name='Who can see my Profile Details (e.g. Avatar, Name, Bio, Gender, Birthday)')),
                ('contact_details', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='0', help_text='Who can see my Contact Details (e.g. Address, Phone #, Email)', max_length=2, verbose_name='Who can see my Contact Details (e.g. Address, Phone #, Email)')),
                ('events_upcoming', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='2', help_text="Who can see the List of Events, I'm going to participate in (upcoming Events)", max_length=2, verbose_name="Who can see the List of Events, I'm going to participate in (upcoming Events)")),
                ('events_completed', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='2', help_text='Who can see the List of Events, I participated in (completed Events)', max_length=2, verbose_name='Who can see the List of Events, I participated in (completed Events)')),
                ('events_affiliated', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='2', help_text='Who can see the List of Events, I affiliated with ', max_length=2, verbose_name='Who can see the List of Events, I affiliated with ')),
                ('participations_canceled', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='1', help_text='Who can see the List of Participations, canceled by me (withdrawn Participations)', max_length=2, verbose_name='Who can see the List of Participations, canceled by me (withdrawn Participations)')),
                ('participations_rejected', models.CharField(choices=[('0', 'No-one'), ('1', 'Admins of the Events, I participate(-d) in'), ('2', 'Admins of the upcoming Events on the Platform')], default='1', help_text='Who can see the List of Participations, canceled by the Event Organizer/Admin (rejected Participations)', max_length=2, verbose_name='Who can see the List of Participations, canceled by the Event Organizer/Admin (rejected Participations)')),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('user', models.OneToOneField(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='privacy_admins', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'user privacy (admins)',
                'verbose_name_plural': 'user privacy (admins)',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('position', models.CharField(blank=True, db_index=True, help_text='Team Member Position', max_length=200, null=True, verbose_name='Position')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, help_text='User, created the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User, modified the Object.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('team', models.ForeignKey(blank=True, help_text='Team', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='members', to='accounts.team', verbose_name='Team')),
                ('user', models.OneToOneField(help_text='Team Member', on_delete=django.db.models.deletion.CASCADE, related_name='team_member', to=settings.AUTH_USER_MODEL, verbose_name='Team Member')),
            ],
            options={
                'verbose_name': 'team member',
                'verbose_name_plural': 'team members',
                'ordering': ['order'],
            },
        ),
    ]
