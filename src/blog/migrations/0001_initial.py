# Generated by Django 4.1.5 on 2023-02-13 21:52

import autoslug.fields
import blog.models
import ckeditor_uploader.fields
import ddcore.models.Comment
import ddcore.models.Rating
import ddcore.models.View
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('avatar', models.ImageField(upload_to=blog.models.blog_directory_path)),
                ('title', models.CharField(db_index=True, help_text='Post Title', max_length=80, verbose_name='Title')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Post short Description', null=True, verbose_name='Short Description')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Post Content', null=True, verbose_name='Content')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('hashtag', models.CharField(blank=True, db_index=True, help_text='Hashtag', max_length=80, null=True, verbose_name='Hashtag')),
                ('status', models.CharField(choices=[('0', 'Draft'), ('1', 'Visible'), ('2', 'Closed')], default='0', help_text='Post Status', max_length=2, verbose_name='Status')),
                ('author', models.ForeignKey(help_text='Post Author', on_delete=django.db.models.deletion.CASCADE, related_name='posted_posts', to=settings.AUTH_USER_MODEL, verbose_name='Post Author')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated List of Tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'blog post',
                'verbose_name_plural': 'blog posts',
                'ordering': ['-created'],
            },
            bases=(ddcore.models.Comment.CommentMixin, ddcore.models.Rating.RatingMixin, ddcore.models.View.ViewMixin, models.Model),
        ),
    ]
